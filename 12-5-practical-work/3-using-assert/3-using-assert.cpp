#include <iostream>
#include <cassert>

float travelTime(float distance, float speed)
// функция вычисления времени в пути по расстоянию и скорости
{
    assert(speed > 0);
    // вызвать падение, если скорость меньше или равна 0
    return distance / speed;
    // вернуть скорость
}

int main() {
    float distance, speed;
    std::cout << "Input distance:\t"; std::cin >> distance;
    // запросить расстояние в переменную distance
    std::cout << "Input speed:\t"; std::cin >> speed;
    // запросить скорость в переменную speed
    std::cout << "Time:\t" << travelTime(distance, speed) << std::endl;
    // вычислить время и вывести на экран
    return 0;
}


/*

 Создайте в своей программе функцию float travelTime(float distance, float speed).
 Она будет находить время в пути и при этом использовать assert,
 чтобы отбросить нулевую и отрицательную скорость. Вызовите эту функцию в main.
 Убедитесь, что падение происходит за счёт assert. Не забудьте подключить заголовочный файл cassert.

Что оценивается
При запуске происходит падение с указанием исходника и строки в нём,
 на которой расположен вызов макроса assert.

Критерии оценки работы
Программы запускаются и корректно работают, нет синтаксических ошибок.
Имена переменных корректные, отражают суть хранимых данных.
Создан текстовый интерфейс для всех программ.
Для всех заданий обеспечен контроль ввода, который обусловлен логикой работы программы.
Не должно быть обращения к элементам за границы контейнера хранения.
В решении программ соблюдается необходимая асимптотическая сложность.

*/