#include <iostream>
#include <cassert>
#include <vector>

using namespace std;

int main()
{
	int num;
	int position = 0;
	cout << "Enter N: ";
	cin >> num;
	vector<int> vec(num);

	for (int i=0; i < num; i++)
	{
		cout << "Enter number robots: " << i + 1 << ": ";
		cin >> vec[i];
	}

	cout << "There are robots in the window {";
	for (int i = 0; i < vec.size(); i++)
	{
		if (i < vec.size()-1) cout << vec[i] << ", ";
		else cout << vec[i] << "}";
	}
	cout << "Enter M: ";
	cin >> num;
}

/*
На витрине стоят несколько роботов, у каждого есть номер. 
Количество роботов и их номера задаются с клавиатуры. 
Сначала вводим количество роботов N, затем для каждой позиции робота от 0 до N 
последовательно вводим N номеров роботов. Далее вводится число M, не превышающее 
количество роботов, и после этого — последовательно M индексов (от 0 до количества 
оставшихся роботов на витрине). Когда введён очередной индекс — робота покупают, 
то есть он покидает витрину, а остальные роботы «группируются», смещаясь на один шаг назад. 
Необходимо вывести список оставшихся после всех покупок роботов.

Пример

Введите N: 4

Введите номер робота 1: 100

Введите номер робота 2: 200

Введите номер робота 3: 250

Введите номер робота 4: 300

На витрине стоят роботы {100, 200, 250, 300}.

Введите M: 2

Введите индекс робота для покупки: 1

Забрали робота с индексом 1

На витрине остались роботы {100, 250, 300}.

Введите индекс робота для покупки: 5

Такого индекса нет

Введите индекс робота для покупки: 0

Забрали робота с индексом 0

На витрине остались роботы {250, 300}.

*/
